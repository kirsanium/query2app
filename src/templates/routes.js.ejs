const register = (app, pool) => {

<%
endpoints.forEach(function(endpoint) {
    const hasGetOne = endpoint.hasOwnProperty('get');
    const hasGetMany = endpoint.hasOwnProperty('get_list');
    if (hasGetOne || hasGetMany) {
        const sql = hasGetOne ? endpoint.get : endpoint.get_list;
        const params = extractParams(sql);
%>
app.get('<%- endpoint.path %>', (req, res) => {
    pool.query(
        <%- formatQuery(sql) %>,<%- params.length > 0 ? '\n        ' + formatParams(params) + ',' : '' %>
        (err, rows, fields) => {
            if (err) {
                throw err
            }
<% if (hasGetMany) { -%>
            res.json(rows)
<% } else { -%>
            if (rows.length === 0) {
                res.type('application/json').status(404).end()
                return
            }
            res.json(rows[0])
<% } -%>
        }
    )
})
<%
    }
    if (endpoint.hasOwnProperty('post')) {
        const params = extractParams(endpoint.post);
%>
app.post('<%- endpoint.path %>', (req, res) => {
    pool.query(
        <%- formatQuery(endpoint.post) %>,<%- params.length > 0 ? '\n        ' + formatParams(params) + ',' : '' %>
        (err, rows, fields) => {
            if (err) {
                throw err
            }
            res.sendStatus(204)
        }
    )
})
<%
    }
    if (endpoint.hasOwnProperty('put')) {
        const params = extractParams(endpoint.put);
%>
app.put('<%- endpoint.path %>', (req, res) => {
    pool.query(
        <%- formatQuery(endpoint.put) %>,<%- params.length > 0 ? '\n        ' + formatParams(params) + ',' : '' %>
        (err, rows, fields) => {
            if (err) {
                throw err
            }
            res.sendStatus(204)
        }
    )
})
<%
    }
    if (endpoint.hasOwnProperty('delete')) {
        const params = extractParams(endpoint.delete);
%>
app.delete('<%- endpoint.path %>', (req, res) => {
    pool.query(
        <%- formatQuery(endpoint.delete) %>,<%- params.length > 0 ? '\n        ' + formatParams(params) + ',' : '' %>
        (err, rows, fields) => {
            if (err) {
                throw err
            }
            res.sendStatus(204)
        }
    )
})
<%
    }
});
%>

}

exports.register = register;
