const register = (app, pool) => {

<%
endpoints.forEach(function(endpoint) {
    const path = endpoint.path;

    endpoint.methods.forEach(function(method) {
        const hasGetOne = method.name === 'get';
        const hasGetMany = method.name === 'get_list';

        if (hasGetOne || hasGetMany) {
            const sql = method.query;
            const params = extractParams(sql);
%>
app.get('<%- path %>', (req, res) => {
    pool.query(
        <%- formatQuery(sql) %>,<%- params.length > 0 ? '\n        ' + formatParams(params) + ',' : '' %>
        (err, rows, fields) => {
            if (err) {
                throw err
            }
<%          if (hasGetMany) { -%>
            res.json(rows)
<%          } else { -%>
            if (rows.length === 0) {
                res.status(404).end()
                return
            }
            res.json(rows[0])
<%          } -%>
        }
    )
})
<%
        }
        if (method.name === 'post') {
            const params = extractParams(method.query);
%>
app.post('<%- path %>', (req, res) => {
    pool.query(
        <%- formatQuery(method.query) %>,<%- params.length > 0 ? '\n        ' + formatParams(params) + ',' : '' %>
        (err, rows, fields) => {
            if (err) {
                throw err
            }
            res.sendStatus(204)
        }
    )
})
<%
        }
        if (method.name === 'put') {
            const params = extractParams(method.query);
%>
app.put('<%- path %>', (req, res) => {
    pool.query(
        <%- formatQuery(method.query) %>,<%- params.length > 0 ? '\n        ' + formatParams(params) + ',' : '' %>
        (err, rows, fields) => {
            if (err) {
                throw err
            }
            res.sendStatus(204)
        }
    )
})
<%
        }
        if (method.name === 'delete') {
            const params = extractParams(method.query);
%>
app.delete('<%- path %>', (req, res) => {
    pool.query(
        <%- formatQuery(method.query) %>,<%- params.length > 0 ? '\n        ' + formatParams(params) + ',' : '' %>
        (err, rows, fields) => {
            if (err) {
                throw err
            }
            res.sendStatus(204)
        }
    )
})
<%
        }
    });
});
%>

}

exports.register = register;
